XF86MonBrightnessUp
    light -A 10
XF86MonBrightnessDown
    light -U 10
XF86AudioLowerVolume
    amixer set Master 5%- && notify-send --urgency=low "Volume" "$(amixer sget 'Master' | awk -F"[][]" '/%/ \{ print $2 " " $(NF-1);exit;\}')"
XF86AudioRaiseVolume
    amixer set Master 5%+ && notify-send --urgency=low "Volume" "$(amixer sget 'Master' | awk -F"[][]" '/%/ \{ print $2 " " $(NF-1);exit;\}')"
XF86AudioMicMute
    amixer set Capture toggle
XF86Display
    mons -n right
super + i
    qutebrowser
super + shift + i
    chromium || chromium-browser
@super + BackSpace
    slock
{super + m,XF86AudioMute}
    amixer set Master toggle && notify-send --urgency=low "Volume" "$(amixer sget 'Master' | awk -F"[][]" '/%/ \{ print $2 " " $(NF-1);exit;\}')"
super + v
    echo 'cycle pause' | socat - /tmp/mpv-socket
@super + s 
    import -silent {_,-window root} ~/screenshot-$(date "+%Y-%m-%d-%H:%M:%S").png
@super + shift + d
    mons -s
@super + d
    mons -o
super + Return
    st -f 'Terminus:size=10:antialias=false:autohint=false'
super + t
    exec mv ~/downloads/*.torrent ~/torrents
super + c
    mpc toggle
super + shift + n
    mpc next
super + shift + p
    mpc prev
super + @o
    dmenu_run -i -nf '#b8bb26' -nb '#282828' -sf '#282828' -sb '#b8bb26' -fn 'Terminus:size=10'
super + g
    passmenu -i -nf '#b8bb26' -nb '#282828' -sf '#282828' -sb '#b8bb26' -fn 'Terminus:size=10'
super + shift + m
    mons -n
# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd
super + space
    scripts/status.sh

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# toggle monocle (zoom)
super + z
	bspc desktop -l next

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + {p,n}
	bspc desktop -f {prev,next}.local.occupied

# focus the last node/desktop
super + {apostrophe,Tab}
	bspc {node,desktop} -f last

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -40 0,bottom 0 40,top 0 -40,right 40 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -40 0,top 0 40,bottom 0 -40,left 40 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-40 0,0 40,0 -40,40 0}
